// Code generated by go-swagger; DO NOT EDIT.

package stock_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new stock api API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for stock api API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetStocksmithAPIStocksQueryStock(params *GetStocksmithAPIStocksQueryStockParams) (*GetStocksmithAPIStocksQueryStockOK, error)

	GetStocksmithAPIStocksQueryTop(params *GetStocksmithAPIStocksQueryTopParams) (*GetStocksmithAPIStocksQueryTopOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetStocksmithAPIStocksQueryStock querys information about a specific stock

  Querys information about a specific stock
*/
func (a *Client) GetStocksmithAPIStocksQueryStock(params *GetStocksmithAPIStocksQueryStockParams) (*GetStocksmithAPIStocksQueryStockOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStocksmithAPIStocksQueryStockParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetStocksmithAPIStocksQueryStock",
		Method:             "GET",
		PathPattern:        "/stocksmith/api/stocks/queryStock",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetStocksmithAPIStocksQueryStockReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetStocksmithAPIStocksQueryStockOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetStocksmithAPIStocksQueryStock: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetStocksmithAPIStocksQueryTop querys information about the top n stocks

  Querys information about the top N stocks
*/
func (a *Client) GetStocksmithAPIStocksQueryTop(params *GetStocksmithAPIStocksQueryTopParams) (*GetStocksmithAPIStocksQueryTopOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStocksmithAPIStocksQueryTopParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetStocksmithAPIStocksQueryTop",
		Method:             "GET",
		PathPattern:        "/stocksmith/api/stocks/queryTop",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetStocksmithAPIStocksQueryTopReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetStocksmithAPIStocksQueryTopOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetStocksmithAPIStocksQueryTop: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
